name: 3. Nightly Arduino sketch

on:
 push:
    branches: [ "nightly" ]
    paths: [".github/workflows/build-nightly.yml", "sketch/*"]

jobs:

  # Compile code

  compile:
    strategy:
      matrix:

        # Boards names

        friendly-name: ["ESP8266"]

        include:
          - friendly-name: "ESP8266"
            platform: "esp8266:esp8266"
            buildeddir: "esp8266.esp8266.nodemcuv2"
            name: "nodemcuv2"
    
    runs-on: macos-latest

    steps:

      # Clone repository

      - name: Clone repository
        uses: actions/checkout@v3

      # Setup arduino CLI
      
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # Configure platform

      - name: Configure platform
        run: |
          arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core install ${{ matrix.platform }} --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          
      # Compile
      
      - name: Compile sketch
        run: |
          arduino-cli compile -b "${{ matrix.platform }}:${{ matrix.name }}" -e ./sketch

      # Move file to better place

      - name: Find compiled file
        run: |
          cp ./sketch/build/*.*.*/*.ino.bin ./${{ matrix.friendly-name }}.bin

      # Upload to artifacts

      - name: Upload to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.friendly-name }}.bin
          path: ${{ matrix.friendly-name }}.bin   

  # Push to repository

  push-to-repo:

    runs-on: ubuntu-latest
    needs: [ compile ]

    steps:

      # Clone repository

      - name: Clone repository
        uses: actions/checkout@v3

      # Remove old firmware folder

      - name: Remove old firmwares
        run: 
          rm -rf ./firmware || true

      # Download new firmware from releases

      - name: Download new firmwares
        uses: actions/download-artifact@v3
        with:
          path: ./firmware/firmware

      # Move downloaded firmware

      - name: Move new firmwares to other location
        run: |
          cd firmware/firmware 
          mv */* ../
          rm -rf ../firmware
        
      # Create version file based on commit name

      - name: Replace version file
        run: |
          echo $(git rev-parse --short "$GITHUB_SHA") > firmware/version.txt

      # Upload version file to artifacts

      - name: Upload version to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: version.txt
          path: firmware/version.txt  

      # Update repository

      - name: Push firmwares to repository
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "üèóÔ∏è Build $(git rev-parse --short "$GITHUB_SHA")" || true
          git push || true