name: 1. Stable Arduino sketch

on:
 workflow_dispatch:
 push:
    branches: [ "stable" ]
    paths: [ ".github/workflows/build-stable.yml", "sketch/*" ]


jobs:

  # Sketch new release

  sketch-release:

    runs-on: ubuntu-latest

    steps:

      # Generate new release version

      - name: Generate release tag
        uses: amitsingh-007/next-release-tag@v2.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      # Generate version file based on new release

      - name: Generate version file
        run: |
          echo ${{ env.release_tag }} > version.txt
      
      # Generate version file based on new release

      - name: Add version file to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: version.txt
          name: version.txt

      # Generate release sketch

      - name: Create release sketch
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          tag: ${{ env.release_tag }}
          name: Release ${{ env.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "version.txt"

  # Compile code

  compile:

    needs: [ sketch-release ]
    runs-on: macos-latest

    strategy:
      matrix:

        # Boards names

        friendly-name: ["ESP8266"]

        include:
          - friendly-name: "ESP8266"
            platform: "esp8266:esp8266"
            buildeddir: "esp8266.esp8266.nodemcuv2"
            name: "nodemcuv2"
    
    
    steps:

      # Clone repository
      
      - name: Clone repository
        uses: actions/checkout@v3

      # Setup arduino CLI
      
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # Configure platform
      
      - name: Configure platform
        run: |
          arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core install ${{ matrix.platform }} --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          
      # Compile
      
      - name: Compile sketch
        run: |
          arduino-cli compile -b "${{ matrix.platform }}:${{ matrix.name }}" -e ./sketch
      
      # Move file to better place

      - name: Find compiled file
        run: |
          cp ./sketch/build/*.*.*/*.ino.bin ./${{ matrix.friendly-name }}.bin

      # Upload to artifacts

      - name: Upload to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.friendly-name }}.bin
          path: ${{ matrix.friendly-name }}.bin
        
      # Get previously generated verion release tag

      - name: Download release version file
        uses: actions/download-artifact@v3
        with:
          name: version.txt

      - name: Read version file
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt

      # Add artifacts to release

      - name: Add to release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          tag: ${{ steps.version.outputs.content }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "${{ matrix.friendly-name }}.bin"

  # Publish new release

  publish-release:

    runs-on: ubuntu-latest
    needs: [ compile ]

    steps:

      # Clone repository

      - name: Clone repository
        uses: actions/checkout@v3

      # Remove old firmware folder

      - name: Remove old firmwares
        run: 
          rm -rf ./firmware || true

      # Download new firmware from releases

      - name: Download new firmwares
        uses: actions/download-artifact@v3
        with:
          path: ./firmware/firmware

      # Move downloaded firmware & version

      - name: Move artifacts to repository
        run: |
          cd firmware/firmware 
          mv */* ../
          rm -rf ../firmware

      # Read version file

      - name: Read version file
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./firmware/version.txt

      # Update repository

      - name: Push firmwares to repository
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "üèóÔ∏è Build ${{steps.version.outputs.content}}" || true
          git push || true

      # Publish release

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.content }}
          draft: false
          prerelease: false
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: release.md